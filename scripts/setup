#! /usr/bin/env bash
#
# Runs first-time setup commands for a freshly-cloned repository

. "$_GO_USE_MODULES" 'setup'

urlp.check_for_prerequisite_tools() {
  if ! command -v node >/dev/null; then
    @go.printf 'Please install Node.js before continuing.\n' >&2
    return 1
  elif [[ "$URLP_PLATFORM" != 'win32' ]] &&
    ! command -v redis-server >/dev/null; then
    @go.printf 'Please install redis-server before continuing.\n' >&2
    return 1
  fi
}

urlp.setup() {
  local result=0
  local start_msg='Setting up project...'

  export PATH="node_modules/.bin:$PATH"
  export FORCE_COLOR='true'
  export COVERAGE_REPORT_SERVER='false'

  if [[ "$URLP_PLATFORM" == 'win32' ]]; then
    start_msg='Setting up browser-only development with Karma on Windows...'
  fi

  @go.critical_section_begin
  @go.log START "$start_msg"
  @go.log_command urlp.check_for_prerequisite_tools

  if [[ -z "$CI" ]]; then
    @go.log_command urlp.npm_install
  fi
  @go.critical_section_end

  if ! @go.log_command @go lint; then
    result=1
  fi

  if [[ "$URLP_PLATFORM" == 'win32' ]] &&
    ! @go.log_command karma start --single-run; then
    result='1'
  elif ! @go.log_command @go test --coverage; then
    result=1
  fi

  if [[ "$result" -eq '0' ]]; then
    @go.log FINISH 'Project setup completed successfully.'
  else
    @go.log ERROR 'Project setup encountered errors; see above for details.'
  fi
  return "$result"
}

urlp.setup "$@"
