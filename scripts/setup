#! /usr/bin/env bash
#
# Runs first-time setup commands for a freshly-cloned repository

. "$_GO_USE_MODULES" 'setup'

urlp.check_for_prerequisite_tools() {
  if ! command -v node >/dev/null; then
    @go.printf 'Please install Node.js before continuing.\n' >&2
    return 1
  elif [[ "$URLP_PLATFORM" != 'win32' ]] && ! command -v redis-server >/dev/null; then
    @go.printf 'Please install redis-server before continuing.\n' >&2
    return 1
  fi
}

urlp.install_required_tools() {
  if ! command -v phantomjs >/dev/null; then
    @go.log_command urlp.npm_install phantomjs-prebuilt
  fi
}

urlp.install_optional_tools() {
  if [[ "$CI" != 'true' ]] && command -v karma >/dev/null; then
    @go.log_command @go setup karma
  fi
}

urlp.setup_windows() {
  local result='0'

  @go.log INFO 'Setting up browser-only development with Karma on Windows...'
  if ! @go.log_command @go setup karma; then
    result='1'
  fi
  if ! @go.log_command @go lint; then
    result='1'
  fi
  if ! @go.log_command karma start --single-run; then
    result='1'
  fi
  return "$result"
}

urlp.setup_full() {
  local result='0'

  if ! @go.log_command urlp.install_optional_tools; then
    result='1'
  fi
  if ! @go.log_command @go lint; then
    result='1'
  fi
  if ! @go.log_command @go test --coverage; then
    result='1'
  fi
  return "$result"
}

urlp.setup() {
  local result='0'

  export PATH="node_modules/.bin:$PATH"
  export FORCE_COLOR='true'

  @go.critical_section_begin
  @go.log START 'Setting up project...'
  @go.log_command urlp.check_for_prerequisite_tools

  if [[ -z "$CI" ]]; then
    @go.log_command urlp.npm_install
  fi
  @go.log_command urlp.install_required_tools
  @go.critical_section_end

  if [[ "$URLP_PLATFORM" == 'win32' ]]; then
    @go.log_command urlp.setup_windows
  else
    @go.log_command urlp.setup_full
  fi
  result="$?"

  if [[ "$result" -eq '0' ]]; then
    @go.log FINISH 'Project setup completed successfully.'
  else
    @go.log ERROR 'Project setup encountered errors; see above for details.'
  fi
  return "$result"
}

urlp.setup "$@"
