#! /usr/bin/env bash
#
# Runs first-time setup commands for a freshly-cloned repository

urlp.check_for_prerequisite_tools() {
  if ! command -v node >/dev/null; then
    @go.printf 'Please install Node.js before continuing.\n' >&2
    return 1
  elif ! command -v redis-server >/dev/null; then
    @go.printf 'Please install redis-server before continuing.\n' >&2
    return 1
  fi
}

urlp.install_required_tools() {
  if ! command -v phantomjs >/dev/null; then
    npm install phantomjs-prebuilt
  fi
}

urlp.install_optional_tools() {
  local karma_dependencies=('karma-browserify'
    'karma-chai'
    'karma-chrome-launcher'
    'karma-detect-browsers'
    'karma-edge-launcher'
    'karma-firefox-launcher'
    'karma-ie-launcher'
    'karma-mocha'
    'karma-mocha-reporter'
    'karma-opera-launcher'
    'karma-phantomjs-launcher'
    'karma-safari-launcher'
    'karma-sinon'
    'watchify')

  if [[ "$CI" != 'true' ]] && command -v karma >/dev/null; then
    if ! karma --help >/dev/null 2>&1; then
      npm install karma
    fi
    npm install "${karma_dependencies[@]}"
  fi
}

urlp.setup() {
  local result='0'

  export PATH="node_modules/.bin:$PATH"
  export FORCE_COLOR='true'

  @go.critical_section_begin
  @go.log START 'Setting up project...'
  @go.log_command urlp.check_for_prerequisite_tools

  if [[ -z "$CI" ]]; then
    @go.log_command npm install
  fi
  @go.log_command urlp.install_required_tools
  @go.critical_section_end

  if ! @go.log_command urlp.install_optional_tools; then
    result='1'
  fi
  if ! @go.log_command @go lint; then
    result='1'
  fi
  if ! @go.log_command @go test --coverage; then
    result='1'
  fi

  if [[ "$result" -eq '0' ]]; then
    @go.log FINISH 'Project setup completed successfully.'
  else
    @go.log ERROR 'Project setup encountered errors; see above for details.'
  fi
  return "$result"
}

urlp.setup "$@"
